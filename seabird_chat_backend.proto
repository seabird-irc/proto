syntax = "proto3";

option java_package = "io.coded.seabird.chat_backend";
option go_package = ".;pb";

import "common.proto";

package seabird;

// For a chat backend to work, it must do 3 things: implement the ChatBackend
// service (even if all the endpoints are technically "unimplemented"),
// implement grpc.health.v1.Health, and connect to the ChatIngest service to
// start a stream.
//
// Each ChatBackend MUST implement grpc.health.v1.Health in addition to the
// ChatBackend interface.
service ChatBackend {
	rpc SendMessage(common.SendMessageRequest) returns (common.SendMessageResponse);
	rpc SendPrivateMessage(common.SendPrivateMessageRequest) returns (common.SendPrivateMessageResponse);

  rpc PerformAction(common.PerformActionRequest) returns (common.PerformActionResponse);
  rpc PerformPrivateAction(common.PerformPrivateActionRequest) returns (common.PerformPrivateActionResponse);

  rpc JoinChannel(common.JoinChannelRequest) returns (common.JoinChannelResponse);
  rpc LeaveChannel(common.LeaveChannelRequest) returns (common.LeaveChannelResponse);
  rpc UpdateChannelInfo(common.UpdateChannelInfoRequest) returns (common.UpdateChannelInfoResponse);

  rpc GetMetadata(common.MetadataRequest) returns (common.MetadataResponse);
}